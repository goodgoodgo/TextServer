<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.textin.dao.BudgetDAO">
    <resultMap id="resultMap" type="org.textin.model.entity.Budget">
        <id column="id" property="id"/>
        <id column="is_delete" property="isDelete"/>
        <id column="create_at" property="createAt"/>
        <id column="update_at" property="updateAt"/>

        <result column="budget_date" property="budgetDate"/>
        <result column="budget" property="budget"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <sql id="allColumn">id, is_deleted, create_at, update_at,budget,budget_date,user_id</sql>
    <sql id="tableName">budget</sql>
    <sql id="where_clause_do" >
        <trim prefix="where" prefixOverrides="and|or" >
            is_deleted = 0
        </trim>
    </sql>
    <select id="findByIdAndBudgetDate" resultType="org.textin.model.entity.Budget">
        select <include refid="allColumn"/>
            from <include refid="tableName"/>
        <include refid="where_clause_do"/> and user_id=#{userId} and budget_date like  #{BudgetDate}
    </select>

    <select id="findYearById" resultType="org.textin.model.entity.Budget">
        select <include refid="allColumn"/>
            from <include refid="tableName"/>
        <include refid="where_clause_do"/> and budget_date like #{year} and user_id=#{userId}
    </select>

    <update id="update">
        update <include refid="tableName"/>
        set budget = #{budget} where user_id=#{userId} and budget_date like #{date}
    </update>
    <insert id="insert">
        insert into  <include refid="tableName"/>
        (budget_date,budget,user_id)
        values
        (
            #{date},
            #{budget},
            #{userId}
        )
    </insert>

</mapper>