<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.textin.dao.ExpenditureDAO">

    <resultMap id="resultMap" type="org.textin.model.entity.Expenditure">
        <id column="id" property="id"/>
        <id column="is_delete" property="isDelete"/>
        <id column="create_at" property="createAt"/>
        <id column="update_at" property="updateAt"/>

        <result column="amount" property="amount"/>
        <result column="category" property="category"/>
        <result column="subcategory" property="subcategory"/>
        <result column="comment" property="comment"/>
        <result column="creatorId" property="creatorId"/>
        <result column="ledgerId" property="ledgerId"/>
        <result column="expenditure_date" property="expenditureDate"/>
    </resultMap>
    <sql id="allColumn">id, is_deleted, create_at, update_at,amount,category,subcategory,comment,creator_id,ledger_id,expenditure_date</sql>
    <sql id="tableName">expenditure</sql>

    <sql id="where_clause_do" >
        <trim prefix="where" prefixOverrides="and|or" >
            is_deleted = 0
        </trim>
    </sql>
    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="org.textin.model.entity.Expenditure">
        insert into <include refid="tableName"/>
        (create_at,amount,creator_id,ledger_id,category,subcategory,comment,expenditure_date)
        values
        (
        #{createAt},
        #{amount},
        #{creatorId},
        #{ledgerId},
        #{category},
        #{subcategory},
        #{comment},
        #{expenditureDate}
        )
    </insert>

    <update id="deleteById">
        update <include refid="tableName"/>
        set is_deleted=1 where id=#{id}
    </update>

    <update id="updateExpenditure">
        UPDATE <include refid="tableName"/>
        SET amount = #{amount}, category = #{category}, comment = #{comment},expenditure_date=#{expenditureDate}
        <include refid="where_clause_do"/>
        and id=#{id}
    </update>

    <select id="findById" resultType="org.textin.model.entity.Expenditure">
        select <include refid="allColumn"/>
        from <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and creator_id = #{creatorId} and ledger_id=#{ledgerId} and expenditure_date like #{expenditureDate}
    </select>

    <select id="sumByDateAndId" resultType="java.lang.Double">
        SELECT SUM(amount)
        FROM <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and creator_id = #{creatorId} and ledger_id=#{ledgerId} and expenditure_date = #{expenditureDate}
    </select>

    <select id="findBetweenDate" resultType="org.textin.model.entity.Expenditure">
        select <include refid="allColumn"/>
        from <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and expenditure_date BETWEEN #{startDay} and #{endDay} and creator_id = #{creatorId};
    </select>

    <select id="sumByDateAndUserId" resultType="java.math.BigDecimal">
        SELECT SUM(amount)
        FROM <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and creator_id = #{creatorId} and expenditure_date = #{expenditureDate}
    </select>

    <select id="sumByMonth" resultType="java.math.BigDecimal">
        SELECT SUM(amount)
        FROM <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and creator_id = #{creatorId} and expenditure_date like #{expenditureDate}
    </select>

    <select id="findByIdAndMonth" resultType="org.textin.model.entity.Expenditure">
        select <include refid="allColumn"/>
        from <include refid="tableName"/>
        <include refid="where_clause_do"/>
        and expenditure_date like #{expenditureDate} and creator_id = #{creatorId};
    </select>
</mapper>